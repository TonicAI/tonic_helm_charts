{{- $server := .Values.tonicai.web_server -}}
{{- $resources := coalesce
  $server.resources
  (dict "limits" (dict "memory" "3Gi") "requests" (dict "memory" "2Gi" "ephemeral-storage" "1Gi")) -}}
{{- $ports := fromYaml (include "tonic.ports" (list $ $server.ports (dict "http" 6580 "https" 6543 "httpsOnly" true)))  }}
{{- $httpsOnly := $ports.httpsOnly }}
{{- $httpPort := $ports.http }}
{{- $httpsPort := $ports.https }}
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    {{- include "tonic.annotations" (list $) | nindent 4 }}
  labels:
    {{- include "tonic.allLabels" (list $ (dict "app" "tonic-web-server")) | nindent 4 }}
  name: tonic-web-server
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tonic-web-server
  strategy:
    type: {{ template "tonic.deployStrategy" . }}
  revisionHistoryLimit: 1
  template:
    metadata:
      annotations:
        {{- include "tonic.annotations" (list $) | nindent 8 }}
      labels:
        {{- include "tonic.allLabels" (list $ (dict "app" "tonic-web-server")) | nindent 8 }}
    spec:
      nodeSelector:
        {{- include "tonic.nodeSelectors" (list $) | nindent 8 }}
      tolerations:
        {{- include "tonic.tolerations" (list $) | nindent 8 }}
      securityContext:
        {{- if .Values.useUnprivilegedContainers }}
        seccompProfile:
          type: RuntimeDefault
        runAsNonRoot: true
        {{- end }}
      initContainers:
        {{- include "tonic.initContainers" (list $ $server.initContainers) | nindent 8 }}
      containers:
      - securityContext:
          {{- if .Values.useUnprivilegedContainers }}
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
          {{- end }}
          {{- if .Values.readOnlyRootFilesystem }}
          readOnlyRootFilesystem: true
          {{- end }}
        volumeMounts:
        {{- if $server.volumeMounts }}
        {{- toYaml $server.volumeMounts | nindent 10 }}
        {{- end }}
        {{- if .Values.readOnlyRootFilesystem }}
        - name: var-log
          mountPath: /var/log/supervisor
        - name: var-run
          mountPath: /var/run/supervisor
        - name: tmp
          mountPath: /tmp
        - name: vector
          mountPath: /tonic/vector_data
        {{- end }}
        env:
        {{- range $key, $value := $server.env }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        {{- if $server.envRaw }}
        {{- with $server.envRaw }}
            {{- toYaml . | nindent 12 }}
        {{- end }}
        {{- end }}
        - name: TONIC_DB_DATABASE
          value: {{ .Values.tonicdb.dbName }}
        - name: TONIC_DB_USERNAME
          value: {{ .Values.tonicdb.user }}
        - name: TONIC_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: tonic-db-password
              key: password
        - name: TONIC_DB_PORT
          value: {{quote .Values.tonicdb.port }}
        - name: TONIC_DB_SSLMODE
          value: {{ .Values.tonicdb.sslMode }}
        - name: TONIC_DB_HOST
          value: {{ .Values.tonicdb.host }}
          {{- if .Values.tonicStatisticsSeed }}
        - name: TONIC_STATISTICS_SEED
          value: {{quote .Values.tonicStatisticsSeed }}
          {{- end }}
        - name: ENABLE_LOG_COLLECTION
          value: {{quote .Values.enableLogCollection }}
        - name: ENVIRONMENT_NAME
          value: {{ .Values.environmentName }}
        - name: TONIC_LICENSE
          valueFrom:
            secretKeyRef:
              name: tonic-license-secret
              key: license
              optional: true
        {{- if .Values.tonicSsoConfig }}
        {{- include "tonic.sso" .Values.tonicSsoConfig | nindent 8 }}
        {{- end }}
        {{- if eq (include "tonic.hostIntegration" .) "true"}}
        - name: TONIC_HOST_INTEGRATION
          value: "kubernetes"
        - name: TONIC_KUBERNETES_NAMESPACE
          value: {{ .Release.Namespace }}
        {{- end }}
        {{- if $server.administrators }}
        - name: TONIC_ADMINISTRATORS
          value: {{ $server.administrators }}
        {{- end }}
        - name: TONIC_NOTIFICATIONS_URL
          value: http://tonic-notifications:7000
        - name: TONIC_PYML_URL
          value: https://tonic-pyml-service:7700
        {{- if not $httpsOnly }}
        - name: TONIC_PORT_HTTP
          value: {{ $httpPort | quote }}
        {{- end }}
        - name: TONIC_PORT_HTTPS
          value: {{ $httpsPort | quote }}
        - name: TONIC_HTTPS_ONLY
          value: {{ $httpsOnly | quote }}
        {{- if $server.envFrom }}
        envFrom:
        {{- with $server.envFrom }}
            {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- end }}
        image: {{ include "tonic.imageWithVersion" ( list $ $server.image "quay.io/tonicai/tonic_web_server" .Values.tonicVersion ) }}
        imagePullPolicy: Always
        name: tonic-web-server
        ports:
        {{- if not $httpsOnly }}
        - containerPort: {{ $httpPort }}
          name: "http"
        {{- end }}
        - containerPort: {{ $httpsPort }}
          name: "https"
        resources:
          {{- toYaml $resources | nindent 10 }}
        startupProbe:
          httpGet:
            scheme: HTTPS
            path: /health
            port: {{ $httpsPort }}
          initialDelaySeconds: 5
          periodSeconds: 60
          timeoutSeconds: 30
          failureThreshold: 5
      restartPolicy: Always
      serviceAccountName: {{ template "tonic.serviceAccountName" . }}
      imagePullSecrets:
      - name: tonicai-build-writer-pull-secret
      volumes:
      {{- if $server.volumes }}
      {{- toYaml $server.volumes | nindent 8 }}
      {{- end }}
      {{- if .Values.readOnlyRootFilesystem }}
      - name: var-run
        emptyDir: {}
      - name: var-log
        emptyDir: {}
      - name: tmp
        emptyDir: {}
      - name: vector
        emptyDir: {}
      - name: db2
        emptyDir: {}
      {{- end }}
