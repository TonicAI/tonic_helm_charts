{{- $notifications := .Values.tonicai.notifications }}
{{- /* support values file w/o resource definition */}}
{{- $resources := coalesce
  $notifications.resources
  (dict "limits" (dict "memory" "1Gi") "requests" (dict "memory" "512Mi" "ephemeral-storage" "1Gi"))
-}}
{{- $rawPorts := include "tonic.ports" (list $ (dict "http" 7000 "https" 7001 "httpsOnly" false)) }}
{{- $ports := fromYaml $rawPorts }}
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    {{- include "tonic.annotations" (list $) | nindent 4 }}
  labels:
    {{- include "tonic.allLabels" (list $ (dict "app" "tonic-notifications")) | nindent 4 }}
  name: tonic-notifications
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tonic-notifications
  strategy:
    type: {{ template "tonic.deployStrategy" . }}
  revisionHistoryLimit: 1
  template:
    metadata:
      annotations:
        {{- include "tonic.annotations" (list $) | nindent 8 }}
      labels:
        {{- include "tonic.allLabels" (list $ (dict "app" "tonic-notifications")) | nindent 8 }}
    spec:
      nodeSelector:
        {{- include "tonic.nodeSelectors" (list $) | nindent 8 }}
      tolerations:
        {{- include "tonic.tolerations" (list $) | nindent 8 }}
      securityContext:
        {{- if .Values.useUnprivilegedContainers }}
        seccompProfile:
          type: RuntimeDefault
        runAsNonRoot: true
        {{- end }}
      initContainers:
        {{- include "tonic.initContainers" (list $ $notifications.initContainers) | nindent 8 }}
      containers:
      - securityContext:
          {{- if .Values.useUnprivilegedContainers }}
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
          {{- end }}
          {{- if .Values.readOnlyRootFilesystem }}
          readOnlyRootFilesystem: true
          {{- end }}
        env:
        {{- range $key, $value := $notifications.env }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        {{- if $notifications.envRaw }}
        {{- with $notifications.envRaw }}
            {{- toYaml . | nindent 12 }}
        {{- end }}
        {{- end }}
        - name: TONIC_DB_DATABASE
          value: {{ .Values.tonicdb.dbName }}
        - name: TONIC_DB_USERNAME
          value: {{ .Values.tonicdb.user }}
        - name: TONIC_DB_PORT
          value: {{quote .Values.tonicdb.port }}
        - name: TONIC_DB_SSLMODE
          value: {{ .Values.tonicdb.sslMode }}
        - name: TONIC_DB_HOST
          value: {{ .Values.tonicdb.host }}
        - name: TONIC_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: tonic-db-password
              key: password
        {{- $smtp := .Values.tonicSmtpConfig }}
        {{- if $smtp.tonicUrl }}
        - name: TONIC_URL
          value: {{ $smtp.tonicUrl }}
        {{- end}}
        {{- if $smtp.sendingAddress }}
        - name: TONIC_NOTIFICATION_SENDING_ADDRESS
          value: {{ $smtp.sendingAddress }}
        {{- end}}
        {{- if $smtp.smtpServerAddress }}
        - name: TONIC_NOTIFICATION_SMTP_SERVER_ADDRESS
          value: {{ $smtp.smtpServerAddress }}
        {{- end}}
        {{- if $smtp.smtpServerPort }}
        - name: TONIC_NOTIFICATION_SMTP_SERVER_PORT
          value: {{quote $smtp.smtpServerPort }}
        {{- end}}
        {{- if $smtp.smtpUsername }}
        - name: TONIC_NOTIFICATION_SMTP_USERNAME
          value: {{ $smtp.smtpUsername }}
        {{- end}}
        {{- if $smtp.smtpPassword }}
        - name: TONIC_NOTIFICATION_SMTP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: tonic-smtp-password
              key: password
        {{- end}}
        - name: ENABLE_LOG_COLLECTION
          value: {{quote .Values.enableLogCollection }}
        - name: ENVIRONMENT_NAME
          value: {{ .Values.environmentName }}
        - name: TONIC_NOTIFICATIONS_HEALTH_PORT_HTTP
          value: {{ $ports.http | quote }}
        - name: TONIC_NOTIFICATIONS_HEALTH_PORT_HTTPS
          value: {{ $ports.https | quote }}
        {{- if $notifications.envFrom }}
        envFrom:
        {{- with $notifications.envFrom }}
            {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- end }}
        image: {{ include "tonic.imageWithVersion" (list $ $notifications.image "quay.io/tonicai/tonic_notifications" .Values.tonicVersion) }}
        imagePullPolicy: Always
        name: tonic-notifications
        volumeMounts:
          {{- if $notifications.volumeMounts }}
          {{- toYaml $notifications.volumeMounts | nindent 10 }}
          {{- end }}
          {{- if .Values.readOnlyRootFilesystem }}
          - name: vector
            mountPath: /tonic/vector_data
          - name: var-run-superd
            mountPath: /var/run/supervisor
          - name: var-log-superd
            mountPath: /var/log/supervisor
          - name: var-log-nginx
            mountPath: /var/log/nginx
          - name: tmp
            mountPath: /tmp
          {{- end }}
        resources:
          {{- toYaml $resources | nindent 10 }}
        ports:
        - containerPort: {{ $ports.http }}
          name: http
        - containerPort: {{ $ports.https }}
          name: https
        startupProbe:
          httpGet:
            scheme: HTTPS
            path: /health
            port: https
          initialDelaySeconds: 5
          periodSeconds: 60
          timeoutSeconds: 30
          failureThreshold: 5
      restartPolicy: Always
      imagePullSecrets:
      - name: tonicai-build-writer-pull-secret
      serviceAccountName: {{ template "tonic.serviceAccountName" . }}
      volumes:
        {{- if $notifications.volumes }}
        {{- toYaml $notifications.volumes | nindent 8 }}
        {{- end }}
        {{- if .Values.readOnlyRootFilesystem }}
        - name: tmp
          emptyDir: {}
        - name: var-log-superd
          emptyDir: {}
        - name: var-log-nginx
          emptyDir: {}
        - name: var-run-superd
          emptyDir: {}
        - name: vector
          emptyDir: {}
        {{- end }}
status: {}
